"use client";

import Image from "next/image";
import Link from "next/link";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Skeleton } from "@/components/ui/skeleton";
import * as React from "react";
import { FaUserCircle, FaRegSmile, FaRegGrinStars } from "react-icons/fa";

const testimonials = [
  {
    name: "–ê–Ω–Ω–∞ –ö.",
    text: "–û—á–µ–Ω—å —É—é—Ç–Ω–∞—è —Å—Ç—É–¥–∏—è –∏ –ø—Ä–∏—è—Ç–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª! –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–ª—É—á–∏–ª–∏—Å—å –ø—Ä–æ—Å—Ç–æ —Å—É–ø–µ—Ä. –ë—É–¥—É —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –¥—Ä—É–∑—å—è–º!",
    avatar: "/avatar1.jpg",
  },
  {
    name: "–ò–≥–æ—Ä—å –ü.",
    text: "–ë—ã—Å—Ç—Ä–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª –≤—Ä–µ–º—è –æ–Ω–ª–∞–π–Ω, –≤—Å—ë –ø—Ä–æ—à–ª–æ –æ—Ç–ª–∏—á–Ω–æ. –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ –∫–ª–∞—Å—Å–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞.",
    avatar: "/avatar2.jpg",
  },
  {
    name: "–ú–∞—Ä–∏—è –°.",
    text: "–°–ø–∞—Å–∏–±–æ –∑–∞ —á—É–¥–µ—Å–Ω—É—é —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—é! –û—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å—Ç—É–¥–∏–∏ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –∫–ª–∏–µ–Ω—Ç–∞–º.",
    avatar: "/avatar3.jpg",
  },
];

const socials = [
  {
    href: "https://instagram.com/yourstudio",
    icon: "/instagram.svg",
    label: "Instagram",
  },
  { href: "https://t.me/yourstudio", icon: "/telegram.svg", label: "Telegram" },
  { href: "https://vk.com/yourstudio", icon: "/vk.svg", label: "VK" },
];

const faqs = [
  {
    question: "–ö–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å –∏–ª–∏ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –±—Ä–æ–Ω—å?",
    answer:
      "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ —á–µ–º –∑–∞ 24 —á–∞—Å–∞ –¥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –∏ –º—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å.",
  },
  {
    question: "–ß—Ç–æ –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π –Ω–∞ —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—é?",
    answer:
      "–í–æ–∑—å–º–∏—Ç–µ —Å–º–µ–Ω–Ω—É—é –æ–±—É–≤—å, –ª—é–±–∏–º—ã–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –∏ —Ö–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! –ï—Å–ª–∏ –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã ‚Äî —É—Ç–æ—á–Ω–∏—Ç–µ —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
  },
  {
    question: "–ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–∏–π—Ç–∏ —Å –¥–µ—Ç—å–º–∏ –∏–ª–∏ –∂–∏–≤–æ—Ç–Ω—ã–º–∏?",
    answer:
      "–î–∞, –∫–æ–Ω–µ—á–Ω–æ! –ü—Ä–æ—Å—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç–µ –Ω–∞—Å –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ.",
  },
];

const testimonialIcons = [
  <FaUserCircle className="text-primary" size={48} key="user" />,
  <FaRegSmile className="text-primary" size={48} key="smile" />,
  <FaRegGrinStars className="text-primary" size={48} key="star" />,
];

function ContactForm() {
  const [name, setName] = React.useState("");
  const [email, setEmail] = React.useState("");
  const [message, setMessage] = React.useState("");
  const [success, setSuccess] = React.useState(false);
  const [errors, setErrors] = React.useState<{
    name?: string;
    email?: string;
    message?: string;
  }>({});
  const [submitting, setSubmitting] = React.useState(false);

  const validate = () => {
    const newErrors: { name?: string; email?: string; message?: string } = {};
    if (!name.trim()) newErrors.name = "–í–≤–µ–¥–∏—Ç–µ –∏–º—è";
    if (!email.trim()) newErrors.email = "–í–≤–µ–¥–∏—Ç–µ email";
    else if (!/^[^@\s]+@[^@\s]+\.[^@\s]+$/.test(email))
      newErrors.email = "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email";
    if (!message.trim()) newErrors.message = "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ";
    return newErrors;
  };

  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    const validationErrors = validate();
    setErrors(validationErrors);
    if (Object.keys(validationErrors).length > 0) return;
    setSubmitting(true);
    setTimeout(() => {
      setSuccess(true);
      setName("");
      setEmail("");
      setMessage("");
      setSubmitting(false);
      setTimeout(() => setSuccess(false), 3000);
    }, 1000);
  };

  return (
    <form
      onSubmit={handleSubmit}
      className="max-w-lg mx-auto p-8 bg-background rounded-lg shadow"
    >
      <Input
        type="text"
        value={name}
        onChange={(event) => setName(event.target.value)}
        placeholder="–ò–º—è"
        className="w-full mb-2"
        aria-label="–ò–º—è"
      />
      {errors.name && (
        <p className="text-red-500 text-sm mb-2">{errors.name}</p>
      )}
      <Input
        type="email"
        value={email}
        onChange={(event) => setEmail(event.target.value)}
        placeholder="Email"
        className="w-full mb-2"
        aria-label="Email"
      />
      {errors.email && (
        <p className="text-red-500 text-sm mb-2">{errors.email}</p>
      )}
      <Input
        type="text"
        value={message}
        onChange={(event) => setMessage(event.target.value)}
        placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ"
        className="w-full mb-2"
        aria-label="–°–æ–æ–±—â–µ–Ω–∏–µ"
      />
      {errors.message && (
        <p className="text-red-500 text-sm mb-2">{errors.message}</p>
      )}
      <Button type="submit" className="w-full mt-2" disabled={submitting}>
        {submitting ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"}
      </Button>
      {success && <p className="text-green-500 mt-4">–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!</p>}
    </form>
  );
}

export default function Home() {
  const [openFaq, setOpenFaq] = React.useState<number | null>(null);
  const [loading, setLoading] = React.useState(false);
  // React.useEffect(() => {
  //   const timer = setTimeout(() => setLoading(false), 1000);
  //   return () => clearTimeout(timer);
  // }, []);
  return (
    <div className="flex flex-col min-h-screen font-sans bg-background text-foreground">
      {/* Hero Section */}
      <section className="flex-1 flex flex-col items-center justify-center py-20 px-4 text-center bg-gradient-to-b from-primary/10 to-transparent opacity-0 animate-fade-in-down">
        <h1 className="text-4xl sm:text-5xl font-bold mb-4">Vasha Studio</h1>
        <p className="text-lg sm:text-xl mb-8 max-w-xl mx-auto">
          –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ñ–æ—Ç–æ—Å—Ç—É–¥–∏—è –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞. –ó–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è
          –æ–Ω–ª–∞–π–Ω –∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ —Å–Ω–∏–º–∫–∏!
        </p>
        <Button asChild size="lg" className="px-8 py-4 text-lg font-semibold">
          <Link href="/booking">–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å</Link>
        </Button>
      </section>

      {/* Gallery Preview */}
      <section className="py-12 px-4 bg-muted opacity-0 animate-fade-in">
        <h2 className="text-2xl font-bold text-center mb-8">–ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã</h2>
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 max-w-5xl mx-auto">
          {loading
            ? [0, 1, 2].map((i) => (
                <Skeleton
                  key={i}
                  className="w-full h-[300px] rounded-xl object-cover"
                  style={{ aspectRatio: "4/3" }}
                />
              ))
            : [
                <Link href="/gallery" key="gallery-link-1">
                  <Image
                    src="/gallery1.jpeg"
                    alt="–°—ä–µ–º–∫–∞ –≤ —Å—Ç—É–¥–∏–∏ 1"
                    width={1200}
                    height={900}
                    className="rounded-xl object-cover w-full h-[300px] sm:h-[350px] md:h-[400px] hover:scale-105 transition-transform shadow-lg"
                  />
                </Link>,
                <Link href="/gallery" key="gallery-link-2">
                  <Image
                    src="/gallery2.jpeg"
                    alt="–ü–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è"
                    width={1200}
                    height={900}
                    className="rounded-xl object-cover w-full h-[300px] sm:h-[350px] md:h-[400px] hover:scale-105 transition-transform shadow-lg"
                  />
                </Link>,
                <Link href="/gallery" key="gallery-link-3">
                  <Image
                    src="/gallery3.jpeg"
                    alt="–°–µ–º–µ–π–Ω–∞—è —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è"
                    width={1200}
                    height={900}
                    className="rounded-xl object-cover w-full h-[300px] sm:h-[350px] md:h-[400px] hover:scale-105 transition-transform shadow-lg"
                  />
                </Link>,
              ]}
        </div>
      </section>

      {/* Features Section */}
      <section className="py-12 px-4 max-w-4xl mx-auto opacity-0 animate-fade-in">
        <h2 className="text-2xl font-bold text-center mb-8">
          –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?
        </h2>
        <div className="grid sm:grid-cols-3 gap-8 text-center">
          <div>
            <div className="text-primary text-4xl mb-2">üì∏</div>
            <h3 className="font-semibold mb-1">
              –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
            </h3>
            <p className="text-muted-foreground">
              –¢–æ–ª—å–∫–æ –ª—É—á—à–∏–µ –∫–∞–º–µ—Ä—ã –∏ —Å–≤–µ—Ç –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–Ω–∏–º–∫–æ–≤.
            </p>
          </div>
          <div>
            <div className="text-primary text-4xl mb-2">üè†</div>
            <h3 className="font-semibold mb-1">–£—é—Ç–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞</h3>
            <p className="text-muted-foreground">
              –ü—Ä–æ—Å—Ç–æ—Ä–Ω–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ –∏ —Å—Ç–∏–ª—å–Ω—ã–µ –¥–µ–∫–æ—Ä–∞—Ü–∏–∏.
            </p>
          </div>
          <div>
            <div className="text-primary text-4xl mb-2">üóìÔ∏è</div>
            <h3 className="font-semibold mb-1">–£–¥–æ–±–Ω–æ–µ –æ–Ω–ª–∞–π–Ω-–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</h3>
            <p className="text-muted-foreground">
              –ë—ã—Å—Ç—Ä–æ –≤—ã–±–∏—Ä–∞–π—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø—Ä—è–º–æ –Ω–∞ —Å–∞–π—Ç–µ.
            </p>
          </div>
        </div>
      </section>

      {/* Testimonials Section */}
      <section className="py-12 px-4 bg-muted/50 opacity-0 animate-fade-in">
        <h2 className="text-2xl font-bold text-center mb-8">–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤</h2>
        <div className="flex flex-col sm:flex-row gap-8 justify-center items-stretch max-w-4xl mx-auto">
          {testimonials.map(({ name, text }, i) => (
            <div
              key={i}
              className="flex flex-col items-center bg-background rounded-lg shadow p-6 flex-1"
            >
              {testimonialIcons[i % testimonialIcons.length]}
              <div className="italic mb-2 mt-2">‚Äú{text}‚Äù</div>
              <div className="font-semibold">{name}</div>
            </div>
          ))}
        </div>
      </section>

      {/* How It Works */}
      <section className="py-12 px-4 opacity-0 animate-fade-in">
        <h2 className="text-2xl font-bold text-center mb-8">
          –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?
        </h2>
        <div className="flex flex-col sm:flex-row gap-8 justify-center items-center max-w-3xl mx-auto">
          <div className="flex flex-col items-center">
            <div className="bg-primary text-primary-foreground rounded-full w-12 h-12 flex items-center justify-center mb-2 text-xl font-bold">
              1
            </div>
            <span>–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É</span>
          </div>
          <div className="hidden sm:block text-2xl">‚Üí</div>
          <div className="flex flex-col items-center">
            <div className="bg-primary text-primary-foreground rounded-full w-12 h-12 flex items-center justify-center mb-2 text-xl font-bold">
              2
            </div>
            <span>–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è</span>
          </div>
          <div className="hidden sm:block text-2xl">‚Üí</div>
          <div className="flex flex-col items-center">
            <div className="bg-primary text-primary-foreground rounded-full w-12 h-12 flex items-center justify-center mb-2 text-xl font-bold">
              3
            </div>
            <span>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ</span>
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <section className="py-12 px-4 bg-muted/50 opacity-0 animate-fade-in">
        <h2 className="text-2xl font-bold text-center mb-8">
          –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
        </h2>
        <div className="max-w-2xl mx-auto divide-y divide-muted-foreground/20 rounded-lg bg-background shadow">
          {faqs.map((faq, idx) => (
            <div key={idx}>
              <button
                className="w-full text-left px-6 py-4 flex justify-between items-center focus:outline-none focus-visible:ring-2 focus-visible:ring-primary text-base font-medium"
                aria-expanded={openFaq === idx}
                onClick={() => setOpenFaq(openFaq === idx ? null : idx)}
              >
                <span>{faq.question}</span>
                <span
                  className={`ml-2 transition-transform ${
                    openFaq === idx ? "rotate-90" : "rotate-0"
                  }`}
                >
                  ‚ñ∂
                </span>
              </button>
              {openFaq === idx && (
                <div className="px-6 pb-4 text-muted-foreground animate-fade-in">
                  {faq.answer}
                </div>
              )}
            </div>
          ))}
        </div>
      </section>

      {/* Contact Form Section */}
      <section className="py-12 px-4 opacity-0 animate-fade-in">
        <h2 className="text-2xl font-bold text-center mb-8">
          –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏
        </h2>
        <ContactForm />
      </section>
    </div>
  );
}
